{"version":3,"sources":["weather/Card.js","weather/Temperature.js","App.js","index.js"],"names":["Card","temp","humidity","pressure","weathermood","name","speed","country","sunset","React","useState","weatherState","setWeatheState","useEffect","date","Date","timeStr","getHours","getMinutes","className","toLocaleString","Temperature","searchValue","setSearchValue","tempInfo","setTempInfo","getWeatherInfo","a","url","fetch","res","json","data","main","weather","wind","sys","console","log","type","placeholder","autoFocus","id","value","onChange","e","target","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d4fedeec.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\r\nimport \"./style.css\";\r\n\r\nconst Card = ({\r\n    temp,\r\n    humidity,\r\n    pressure,\r\n    weathermood,\r\n    name,\r\n    speed,\r\n    country,\r\n    sunset,\r\n}) => {\r\n    const [weatherState, setWeatheState] = React.useState(\"\");\r\n\r\n    useEffect(() => {\r\n        if (weathermood) {\r\n            switch (weathermood) {\r\n                case \"Clouds\":\r\n                    setWeatheState(\"wi-day-cloudy\");\r\n                    break;\r\n                case \"Haze\":\r\n                    setWeatheState(\"wi-fog\");\r\n                    break;\r\n                case \"Clear\":\r\n                    setWeatheState(\"wi-day-sunny\");\r\n                    break;\r\n                case \"Mist\":\r\n                    setWeatheState(\"wi-dust\");\r\n                    break;\r\n\r\n                default:\r\n                    setWeatheState(\"wi-day-sunny\");\r\n                    break;\r\n            }\r\n        }\r\n    }, [weathermood]);\r\n\r\n    \r\n    let sec = sunset;\r\n    let date = new Date(sec * 1000);\r\n    let timeStr = `${date.getHours()}:${date.getMinutes()}`;\r\n    return (\r\n        <>\r\n            <article className=\"widget\">\r\n                <div className=\"weatherIcon\">\r\n                    <i className={`wi ${weatherState}`}></i>\r\n                </div>\r\n\r\n                <div className=\"weatherInfo\">\r\n                    <div className=\"temperature\">\r\n                        <span>{temp}&deg;</span>\r\n                    </div>\r\n\r\n                    <div className=\"description\">\r\n                        <div className=\"weatherCondition\">{weathermood}</div>\r\n                        <div className=\"place\">\r\n                            {name}, {country}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"date\"> {new Date().toLocaleString()} </div>\r\n\r\n                {/* our 4column section  */}\r\n                <div className=\"extra-temp\">\r\n                    <div className=\"temp-info-minmax\">\r\n                        <div className=\"two-sided-section\">\r\n                            <p>\r\n                                <i className={\"wi wi-sunset\"}></i>\r\n                            </p>\r\n                            <p className=\"extra-info-leftside\">\r\n                                {timeStr} PM <br />\r\n                                Sunset\r\n                            </p>\r\n                        </div>\r\n\r\n                        <div className=\"two-sided-section\">\r\n                            <p>\r\n                                <i className={\"wi wi-humidity\"}></i>\r\n                            </p>\r\n                            <p className=\"extra-info-leftside\">\r\n                                {humidity} <br />\r\n                                Humidity\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"weather-extra-info\">\r\n                        <div className=\"two-sided-section\">\r\n                            <p>\r\n                                <i className={\"wi wi-rain\"}></i>\r\n                            </p>\r\n                            <p className=\"extra-info-leftside\">\r\n                                {pressure} <br />\r\n                                Pressure\r\n                            </p>\r\n                        </div>\r\n\r\n                        <div className=\"two-sided-section\">\r\n                            <p>\r\n                                <i className={\"wi wi-strong-wind\"}></i>\r\n                            </p>\r\n                            <p className=\"extra-info-leftside\">\r\n                                {speed} <br />\r\n                                Speed\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </article>\r\n        </>\r\n    );\r\n};\r\n    \r\n\r\n\r\nexport default Card\r\n","import React, { useState, useEffect } from 'react'\r\nimport Card from './Card';\r\nimport \"./style.css\";\r\n\r\nconst Temperature = () => {\r\n    const [searchValue, setSearchValue] = useState(\"Indore\");\r\n    const [tempInfo, setTempInfo] = useState({});\r\n\r\n    const getWeatherInfo = async () => {\r\n        try {\r\n            let url = `https://api.openweathermap.org/data/2.5/weather?q=${searchValue}&units=metric&appid=f17a7e3f43c3ef8c67a5ba2ff65c2af0`;\r\n\r\n            let res = await fetch(url);\r\n            let data = await res.json();\r\n\r\n            const { temp, humidity, pressure } = data.main;\r\n            const { main: weathermood } = data.weather[0];\r\n            const { name } = data;\r\n            const { speed } = data.wind;\r\n            const { country, sunset } = data.sys;\r\n\r\n            const myNewWeatherInfo = {\r\n                temp,\r\n                humidity,\r\n                pressure,\r\n                weathermood,\r\n                name,\r\n                speed,\r\n                country,\r\n                sunset,\r\n            };\r\n\r\n            setTempInfo(myNewWeatherInfo);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getWeatherInfo();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"wrap\">\r\n                <div className=\"search\">\r\n                    <input\r\n                        type=\"search\"\r\n                        placeholder=\"search...\"\r\n                        autoFocus\r\n                        id=\"search\"\r\n                        className=\"searchTerm\"\r\n                        value={searchValue}\r\n                        onChange={(e) => setSearchValue(e.target.value)}\r\n                    />\r\n\r\n                    <button\r\n                        className=\"searchButton\"\r\n                        type=\"button\"\r\n                        onClick={getWeatherInfo}>\r\n                        Search\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            {/* our temp card  */}\r\n            <Card {...tempInfo} />\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default Temperature;\r\n","\nimport Temperature from './weather/Temperature';\n//import WeatherCard from './weather/WeatherCard';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Temperature/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}